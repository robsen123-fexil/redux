{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\react\\\\redux\\\\src\\\\components\\\\MyForm.js\",\n  _s = $RefreshSig$();\n// MyForm.js\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserSlice } from \"../redux/slice/user\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { CREATE_USER, UPDATE_USER_BY_ID } from \"../redux/types\";\nimport { addUserSlice, editUserSlice } from \"../redux/slice/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const handleChange = prop => event => {\n    console.log(\"sdf\");\n    dispatch(setUserSlice({\n      ...user,\n      [prop]: event.target.value\n    }));\n  };\n  const handleSubmit = () => {\n    user.id === 0 ? dispatch({\n      type: CREATE_USER,\n      user: {\n        ...user,\n        id: nanoid(8)\n      }\n    }) : dispatch({\n      type: UPDATE_USER_BY_ID,\n      user\n    });\n    dispatch(setUserSlice({\n      id: 0,\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        margin: \"10px\"\n      },\n      margin: \"normal\",\n      value: user.id,\n      fullWidth: true,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        margin: \"10px\"\n      },\n      onChange: handleChange(\"name\"),\n      placeholder: \"Enter Name\",\n      value: user.name,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        margin: \"10px\"\n      },\n      onChange: handleChange(\"email\"),\n      placeholder: \"Enter Email\",\n      value: user.email,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      style: {\n        margin: \"10px\"\n      },\n      onChange: handleChange(\"password\"),\n      placeholder: \"Enter Password\",\n      value: user.password,\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        margin: \"10px\"\n      },\n      onClick: handleSubmit,\n      fullWidth: true,\n      variant: \"contained\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MyForm, \"xXvxOehHJpw/X5Imivu/2I1+3NA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["Input","Button","useDispatch","useSelector","setUserSlice","nanoid","CREATE_USER","UPDATE_USER_BY_ID","addUserSlice","editUserSlice","jsxDEV","_jsxDEV","Fragment","_Fragment","MyForm","_s","user","state","dispatch","handleChange","prop","event","console","log","target","value","handleSubmit","id","type","name","email","password","children","style","margin","fullWidth","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/react/redux/src/components/MyForm.js"],"sourcesContent":["// MyForm.js\r\nimport Input from \"@mui/material/Input\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserSlice } from \"../redux/slice/user\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { CREATE_USER, UPDATE_USER_BY_ID } from \"../redux/types\";\r\nimport { addUserSlice, editUserSlice } from \"../redux/slice/users\";\r\n\r\nconst MyForm = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    console.log(\"sdf\")\r\n    dispatch(setUserSlice({ ...user, [prop]: event.target.value }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    user.id === 0\r\n      ? dispatch({ type: CREATE_USER, user: { ...user, id: nanoid(8) } })\r\n      : dispatch({ type: UPDATE_USER_BY_ID, user });\r\n\r\n    dispatch(\r\n      setUserSlice({\r\n        id: 0,\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        style={{ margin: \"10px\" }}\r\n        margin=\"normal\"\r\n        value={user.id}\r\n        fullWidth\r\n        disabled\r\n      />\r\n      <Input\r\n        style={{ margin: \"10px\" }}\r\n        onChange={handleChange(\"name\")}\r\n        placeholder=\"Enter Name\"\r\n        value={user.name}\r\n        fullWidth\r\n      />\r\n      <Input\r\n        style={{ margin: \"10px\" }}\r\n        onChange={handleChange(\"email\")}\r\n        placeholder=\"Enter Email\"\r\n        value={user.email}\r\n        fullWidth\r\n      />\r\n      <Input\r\n        style={{ margin: \"10px\" }}\r\n        onChange={handleChange(\"password\")}\r\n        placeholder=\"Enter Password\"\r\n        value={user.password}\r\n        fullWidth\r\n      />\r\n      <Button\r\n        style={{ margin: \"10px\" }}\r\n        onClick={handleSubmit}\r\n        fullWidth\r\n        variant=\"contained\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}